CREATE TABLE intake_threshold (
    id                     integer primary key generated by default as IDENTITY
    , nutrient             text
    , nutrient_name        text
    , unit_adequacy        text
    , unit_excess          text
    , unit_cnd             text
    , reference_person     text
    , EAR                  numeric(20,10)
    , UL                   numeric(20,10)
    , CND                  numeric(20,10)
    , CUL                  numeric(20,10)
    , notes                text
    , source               text
);



CREATE OR REPLACE FUNCTION update_cnd() RETURNS trigger AS $intake_threshold_tg1$
    BEGIN

        IF NEW.ear is not null
            THEN
				NEW.cnd := (NEW.ear/NEW.energy)*1000;
                NEW.unit_cnd := 'kcal';
        ELSE
            NEW.unit_cnd := NULL;
        END IF;

		RETURN NEW;
    END;
$intake_threshold_tg1$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION update_cul() RETURNS trigger AS $intake_threshold_tg2$
    BEGIN

        IF NEW.ul is not null
            THEN
				NEW.cul := (NEW.ul/NEW.energy)*1000;
        END IF;

		RETURN NEW;
    END;
$intake_threshold_tg2$ LANGUAGE plpgsql;


CREATE TRIGGER intake_threshold_tg1 BEFORE insert or update OF ear
    ON intake_threshold
    FOR EACH ROW
    EXECUTE PROCEDURE update_cnd();

    CREATE TRIGGER intake_threshold_tg2 BEFORE insert or update OF ul
    ON intake_threshold
    FOR EACH ROW
    EXECUTE PROCEDURE update_cul();


CREATE TABLE intervention_thresholds (
    id                     integer primary key generated by default as IDENTITY
    , intervention_id        integer REFERENCES intervention(id)
    , unit_adequacy        text
    , unit_excess          text
    , unit_cnd             text
    , reference_person     text
    , EAR                  numeric(20,10)
    , EAR_default          numeric(20,10)
    , UL                   numeric(20,10)
    , UL_default           numeric(20,10)
    , CND                  numeric(20,10)
    , CUL                  numeric(20,10)
    , energy               numeric(20,10)
    , energy_default       numeric(20,10)
    , notes                text
    , source               text
);

CREATE TRIGGER intervention_thresholds_tg1 BEFORE insert or update OF ear
    ON intervention_thresholds
    FOR EACH ROW
    EXECUTE PROCEDURE update_cnd();

    CREATE TRIGGER intervention_thresholds_tg2 BEFORE insert or update OF ul
    ON intervention_thresholds
    FOR EACH ROW
    EXECUTE PROCEDURE update_cul();

    CREATE TRIGGER intervention_thresholds_tg3 BEFORE insert or update OF energy
    ON intervention_thresholds
    FOR EACH ROW
    EXECUTE PROCEDURE update_cnd();
   
    CREATE TRIGGER intervention_thresholds_tg4 BEFORE insert or update OF energy
    ON intervention_thresholds
    FOR EACH ROW
    EXECUTE PROCEDURE update_cul();